{"version":3,"sources":["../src/thredds.js"],"names":["moment","mapboxgl","d3","XmlConverter","Plotly","Thredds","ctrl","mapContainer","createMap","frames","currentFrameIndex","animation","time","frameIndex","stopAnimation","stepFrame","mapCenterLonLat","parseFloat","panel","mapCenterLongitude","mapCenterLatitude","accessToken","mbApiKey","map","Map","container","style","mapStyle","center","zoom","initialZoom","interactive","userInteractionEnabled","wmsoverlay","newLayer","id","type","source","paint","on","e","addLayer","onclick","onClick","self","n","Math","round","data","lat","lngLat","lng","from","to","length","ql","thredds","parameter","options","REQUEST","ELEVATION","TRANSPARENT","STYLES","COLORSCALERANGE","NUMCOLORBANDS","LOGSCALE","SERVICE","VERSION","SRS","CRS","FORMAT","INFO_FORMAT","BBOX","join","X","Y","WIDTH","HEIGHT","TIME","QUERY_LAYERS","LAYERS","url","URL","search","URLSearchParams","window","$","ajax","contentType","dataType","success","res","result","xml2js","compact","FeatureInfoResponse","FeatureInfo","graphData","name","x","_text","y","value","document","getElementById","display","newPlot","title","text","margin","l","r","t","b","responsive","showLink","displayLogo","displayModeBar","fail","console","log","render","legend","needToRedrawFrames","clearFrames","createFrames","startAnimation","forEach","item","getLayer","removeLayer","dataCharacteristics","timeValues","loaded","createFramesSafely","attemptsLeft","interval","setInterval","clearInterval","frameName","wmsUrl","scale_min","scale_max","getSource","addSource","tiles","width","height","includes","push","slider","select","attr","start","stop","stopAnimationsync","goToIndex","oldFrame","newFrame","format","property","resize","panTo","mapCenterMoved","zoomFactor","setZoom","parseInt","remove"],"mappings":"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","file":"thredds.js","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\nimport moment from 'moment';\nimport mapboxgl from './libs/mapbox-gl';\nimport * as d3 from './libs/d3';\nimport XmlConverter from \"./libs/xml-js\";\nimport Plotly from './libs/plotly';\n\n/* eslint-disable id-length, no-unused-vars */\n\nexport default class Thredds {\n    constructor(ctrl, mapContainer) {\n        // console.log('NEW constructor')\n        this.ctrl = ctrl;\n        this.mapContainer = mapContainer;\n        this.createMap();\n        this.frames = []; // list of timestamps\n        this.currentFrameIndex = 0;\n        this.animation = {};\n        this.time = null;\n    }\n\n    setFrame(frameIndex)\n    {\n        if (this.animation) {\n            this.stopAnimation();\n        }\n        this.currentFrameIndex = frameIndex - 1;\n        this.stepFrame();\n    }\n\n    createMap() {\n        // console.log('rebuilding map');\n        const mapCenterLonLat = [parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)];\n        mapboxgl.accessToken = this.ctrl.panel.mbApiKey;\n        this.map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/' + this.ctrl.panel.mapStyle,\n            center: mapCenterLonLat,\n            zoom: parseFloat(this.ctrl.panel.initialZoom),\n            interactive: this.ctrl.panel.userInteractionEnabled\n        });\n        if(this.ctrl.panel.wmsoverlay)\n        {\n            const newLayer = {\n                id: 'wmsoverlay',\n                type: 'raster',\n                source: {\n                    'type': 'raster',\n                    'tiles': [\n                    this.ctrl.panel.wmsoverlay\n                    ]\n                },\n                paint: {\n                    \"raster-opacity\": 1,\n                },\n            }\n            this.map.on('style.load', function (e) {\n                this.addLayer(newLayer);\n            });\n        }\n\n        const onclick = this.onClick,\n        self = this;\n        this.map.on('click', function (e) {\n            onclick(e,self);\n        });\n\n    }\n\n    round(n) {\n        return Math.round(n*1000)/1000\n    }\n\n    onClick(e,self) {\n        const data = {\n            lat: e.lngLat.lat,\n            lng: e.lngLat.lng,\n            from: self.frames[0],\n            to: self.frames[self.frames.length-1],\n            ql: self.ctrl.panel.thredds.parameter\n        }\n        const options = {\n            REQUEST: 'GetFeatureInfo',\n            ELEVATION: '0',\n            TRANSPARENT: 'true',\n            STYLES: self.ctrl.panel.thredds.style,\n            COLORSCALERANGE: '-50,50',\n            NUMCOLORBANDS: '20',\n            LOGSCALE: 'false',\n            SERVICE: 'WMS',\n            VERSION: '1.1.1',\n            SRS: 'EPSG:4326',\n            CRS: 'EPSG:4326',\n            FORMAT: 'image/png',\n            INFO_FORMAT: 'text/xml',\n            BBOX: [\n                e.lngLat.lng - 0.002,\n                e.lngLat.lat - 0.002,\n                e.lngLat.lng + 0.002,\n                e.lngLat.lat + 0.002,\n            ].join(','),\n            X: 1,\n            Y: 1,\n            WIDTH: 2,\n            HEIGHT: 2,\n            TIME: `${self.frames[0]}/${self.frames[self.frames.length-1]}`,\n            QUERY_LAYERS: self.ctrl.panel.thredds.parameter,\n            LAYERS: self.ctrl.panel.thredds.parameter,\n        }\n        const url = new URL(self.ctrl.panel.thredds.url)\n        url.search = new URLSearchParams(options)\n        // console.log(url.toString());\n\n        window.$.ajax({\n          type: 'GET',\n          url: url,\n          contentType: 'application/xml',\n          dataType: 'text',\n          success: (res) => {\n             const result = XmlConverter.xml2js(res, { compact : true }).FeatureInfoResponse.FeatureInfo;\n             self.graphData = {\n                 name: `${self.ctrl.panel.thredds.parameter} - lat ${self.round(e.lngLat.lat)} lon ${self.round(e.lngLat.lng)}`,\n                 x: result.map(function (x) {\n                    return x.time._text\n                 }),\n                 y: result.map(function (x) {\n                    return x.value._text !== 'none' ? self.round(x.value._text) : null\n                 }),\n                type: 'scatter',\n             }\n             document.getElementById(\"graphcontainer_\"+self.ctrl.panel.id).style.display = \"block\";\n              Plotly.newPlot(\n                  \"graph_\"+self.ctrl.panel.id,\n                  [self.graphData],\n                  {title: {text: self.graphData.name}, margin: {l:40,r:10,t:40,b:40}},\n                  {responsive: true,showLink: false,displayLogo: false,displayModeBar: false}\n              );\n          }\n        }).fail((res) => {\n          console.log('error in ajax: ', res);\n          this.thredds = null;\n          this.render();\n        });\n    // }\n\n    }\n\n    createLegend() {\n        this.legend = {};\n    }\n\n    needToRedrawFrames() {\n        this.legend = {};\n        return true;\n    }\n\n    drawLayerFrames() {\n        const data = this.ctrl.data;\n        if (this.needToRedrawFrames(data)) {\n            // console.log('needToRedrawFrames')\n            this.stopAnimation();\n            this.clearFrames();\n            this.createFrames(data);\n            // this.setFrame(0);\n            this.startAnimation();\n        }\n    }\n\n    clearFrames() {\n        this.frames.forEach((item) => {\n            if (this.map.getLayer('f-' + item))\n                this.map.removeLayer('f-' + item);\n        });\n        this.frames = [];\n    }\n\n    createFrames() {\n        // console.log('createFrames')\n        if (!this.ctrl.dataCharacteristics.timeValues) {\n            // console.log('no series to display');\n            return;\n        }\n\n        if (!this.ctrl.thredds) {\n            // console.log('no thredds data');\n            return;\n        }\n\n        if (this.map.loaded()) {\n            this.createFramesSafely();\n        } else {\n            // console.log('no geo source in map. maybe not loaded?');\n            // this is stupid to use setInterval.\n            // but mapbox doesn't seem to have a on-source-loaded event that reliably works\n            // for this purpose.\n            let attemptsLeft = 10;\n            const interval = setInterval(() => {\n                // console.log('waited for layer to load.');\n                if (this.map.loaded()) {\n                    this.createFramesSafely();\n                    clearInterval(interval);\n                } else {\n                    // console.log('still no geo source. try refresh manually?');\n                    if (--attemptsLeft <= 0) {\n                        clearInterval(interval);\n                    }\n                }\n            }, 500);\n        }\n    }\n\n    createFramesSafely() {\n        // console.log('createFramesSafely')\n        // console.log('createFramesSafely',this.ctrl.dataCharacteristics.timeValues)\n        this.ctrl.dataCharacteristics.timeValues.forEach((time) => {\n            // console.log(time)\n            // console.log(this.ctrl.panel.thredds)\n            const frameName = 'f-' + time;\n            const wmsUrl = `${this.ctrl.panel.thredds.url}?LAYERS=${this.ctrl.panel.thredds.parameter}&ELEVATION=0&TIME=${time}&TRANSPARENT=true&STYLES=${this.ctrl.panel.thredds.style}&COLORSCALERANGE=${this.ctrl.panel.thredds.scale_min},${this.ctrl.panel.thredds.scale_max}&NUMCOLORBANDS=80&LOGSCALE=false&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fpng&SRS=EPSG%3A3857&BBOX={bbox-epsg-3857}&WIDTH=256&HEIGHT=256`;\n            // console.log('wmsUrl', wmsUrl);\n            if (this.map) {\n                if (!this.map.getSource('f-' + time))\n                    this.map.addSource('f-' + time, {\n                        type: 'raster',\n                        tiles: [wmsUrl],\n                        width: 256,\n                        height: 256\n                    });\n            }\n\n            if(!this.frames.includes(time))\n                this.frames.push(time);\n        });\n\n        // get slider component, set min/max/value\n        const slider = d3.select('#map_' + this.ctrl.panel.id + '_slider')\n            .attr('min', 0)\n            .attr('max', (this.frames.length -1));\n\n\n        const self = this;\n\n        const start = d3.select(\"#start_\"+this.ctrl.panel.id).on(\"click\", function() {\n            // console.log('PASSO start')\n            self.startAnimation();\n        });\n\n        const stop = d3.select(\"#stop_\"+this.ctrl.panel.id).on(\"click\", function() {\n            // console.log('PASSO stop')\n            self.stopAnimation();\n        });\n    }\n\n\n    startAnimation() {\n        if (this.animation) {\n            this.stopAnimationsync();\n        }\n\n        this.animation = setInterval(() => {\n            this.stepFrame();\n        }, 3000);\n        d3.select(\"#stop_\"+this.ctrl.panel.id).style('display', '');\n        d3.select(\"#start_\"+this.ctrl.panel.id).style('display', 'none');\n    }\n\n    stopAnimation() {\n        clearInterval(this.animation);\n        this.animation = null;\n        d3.select(\"#start_\"+this.ctrl.panel.id).style('display', '');\n        d3.select(\"#stop_\"+this.ctrl.panel.id).style('display', 'none');\n    }\n\n    pauseAnimation() {\n        clearInterval(this.animation);\n        // this.animation = null;\n    }\n\n    stepFrame(goToIndex) {\n        // console.log('stepFrame', this.frames.length, this.currentFrameIndex)\n        if (!this.map) {\n            return;\n        }\n        if (this.frames.length === 0) {\n            // console.log('skipping animation: no frames');\n            return;\n        }\n        const oldFrame = 'f-' + this.frames[this.currentFrameIndex];\n\n        if(!goToIndex && goToIndex !== 0) {\n            this.currentFrameIndex += 1;\n        } else {\n            this.currentFrameIndex = goToIndex;\n        }\n        if (this.currentFrameIndex >= this.frames.length) {\n            this.currentFrameIndex = 0;\n        }\n        const newFrame = 'f-' + this.frames[this.currentFrameIndex];\n\n        // console.log(newFrame, oldFrame)\n        if(this.map.getLayer(oldFrame)) {\n            this.map.removeLayer(oldFrame);\n        }\n        const newLayer = {\n            id: newFrame,\n            type: 'raster',\n            source: newFrame,\n            paint: {\n                \"raster-opacity\": 1,\n            },\n        }\n        this.map.addLayer(newLayer);\n        this.time = this.frames[this.currentFrameIndex]\n        // this.map.setPaintProperty(newFrame, 'raster-opacity', 1);\n        // this.map.setPaintProperty(oldFrame, 'raster-opacity', 0);\n\n        // set time string in legend\n        d3.select('#map_' + this.ctrl.panel.id + '_date').text(moment(this.frames[this.currentFrameIndex]).format('DD-MM-YYYY HH:mm'));\n        // set slider position to indicate time-location\n        d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value', this.currentFrameIndex);\n    }\n\n    resize() {\n        this.map.resize();\n    }\n\n    panToMapCenter() {\n        this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)]);\n        this.ctrl.mapCenterMoved = false;\n    }\n\n    setZoom(zoomFactor) {\n        this.map.setZoom(parseInt(zoomFactor, 10));\n    }\n\n    remove() {\n        if (this.map) {\n            this.map.remove();\n        }\n        this.map = null;\n    }\n}\n"]}